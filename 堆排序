//堆排序
void heapify(int arr[], int n, int i){
	if(i>=n) return;
	int c1=2*i+1;
	int c2=2*i+2;
	int mx=i;
	if(arr[c1]>arr[mx]){
		mx=c1;
	}
	if(arr[c2]>arr[mx]){
		mx=c2;
	}
	if(mx!=i){
		swap(mx, i);
		heapify(arr, n, mx);
	}
	
}
void buildHeap(int arr[], int n){
	int last_node = n-1;
	int parent = (last_node - 1)/2;
	for(int i=parent;i>=0;i--){
		heapify(arr, n, i);
	}
	
} 
void heapSort(int arr[], int n){
	buildHeap(arr, n);
	for(int i=n-1; i>=0; i--){
		swap(arr[i], arr[0]);
		heapify(arr, i, 0);
	}
}

//调用堆排序
heapSort(arr, 8); 
